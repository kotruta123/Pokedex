{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrale\\\\Desktop\\\\Web2_Assignment2\\\\my-app\\\\src\\\\Components\\\\Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Card from \"./Card\";\nimport Pokeinfo from \"./Pokeinfo\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  // State variables to hold Pokemon data\n  const [pokeData, setPokeData] = useState([]);\n  const [loading, setLoading] = useState(true); // const [pageNumber, setPageNumber] = useState(1);\n  // State variables to handle pagination\n\n  const [url, setUrl] = useState(\"https://pokeapi.co/api/v2/pokemon/\"); // retrieved from https://pokeapi.co/\n\n  const [nextUrl, setNextUrl] = useState();\n  const [prevUrl, setPrevUrl] = useState();\n  const [pokeDex, setPokeDex] = useState(); // Function to retrieve Pokemon data from PokeAPI\n  // const pokeFun = async () => {\n  //     setLoading(true);\n  //     const limit = 20;\n  //     const offset = (pageNumber - 1) * limit; // Replace pageNumber with the current page number\n  //     const res = await axios.get(`${url}?limit=${limit}&offset=${offset}`);\n  //     setNextUrl(res.data.next);\n  //     setPrevUrl(res.data.previous);\n  //     getPokemon(res.data.results);\n  //     setLoading(false);\n  // };\n\n  const pokeFun = async () => {\n    setLoading(true);\n    const res = await axios.get(url);\n    setNextUrl(res.data.next);\n    setPrevUrl(res.data.previous);\n    getPokemon(res.data.results);\n    setLoading(false);\n  }; // Function to retrieve individual Pokemon data\n\n\n  const getPokemon = async res => {\n    res.map(async item => {\n      const result = await axios.get(item.url);\n      setPokeData(state => {\n        state = [...state, result.data];\n        state.sort((a, b) => a.id > b.id ? 1 : -1);\n        return state;\n      });\n    });\n  }; // Call pokeFun() on initial render and whenever the url state changes\n\n\n  useEffect(() => {\n    pokeFun();\n  }, [url]); // useEffect(() => {\n  //     pokeFun();\n  // }, [url, pokeFun]);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-content\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          pokemon: pokeData,\n          loading: loading,\n          infoPokemon: poke => setPokeDex(poke)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group\",\n          children: [prevUrl && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setPokeData([]);\n              setUrl(prevUrl);\n            },\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 37\n          }, this), nextUrl && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setPokeData([]);\n              setUrl(nextUrl);\n            },\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Pokemon Details:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Pokeinfo, {\n          data: pokeDex\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Main, \"rThRXPtiNXdERjq0UQbUJZnxWx0=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/mrale/Desktop/Web2_Assignment2/my-app/src/Components/Main.jsx"],"names":["React","Card","Pokeinfo","axios","useState","useEffect","Main","pokeData","setPokeData","loading","setLoading","url","setUrl","nextUrl","setNextUrl","prevUrl","setPrevUrl","pokeDex","setPokeDex","pokeFun","res","get","data","next","previous","getPokemon","results","map","item","result","state","sort","a","b","id","poke"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Card from \"./Card\";\nimport Pokeinfo from \"./Pokeinfo\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nconst Main = () => {\n    // State variables to hold Pokemon data\n    const [pokeData, setPokeData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    // const [pageNumber, setPageNumber] = useState(1);\n\n    // State variables to handle pagination\n    const [url, setUrl] = useState(\"https://pokeapi.co/api/v2/pokemon/\")  // retrieved from https://pokeapi.co/\n    const [nextUrl, setNextUrl] = useState();\n    const [prevUrl, setPrevUrl] = useState();\n    const [pokeDex, setPokeDex] = useState();\n\n    // Function to retrieve Pokemon data from PokeAPI\n\n    // const pokeFun = async () => {\n    //     setLoading(true);\n    //     const limit = 20;\n    //     const offset = (pageNumber - 1) * limit; // Replace pageNumber with the current page number\n    //     const res = await axios.get(`${url}?limit=${limit}&offset=${offset}`);\n    //     setNextUrl(res.data.next);\n    //     setPrevUrl(res.data.previous);\n    //     getPokemon(res.data.results);\n    //     setLoading(false);\n    // };\n\n\n    const pokeFun = async () => {\n        setLoading(true)\n        const res = await axios.get(url);\n        setNextUrl(res.data.next);\n        setPrevUrl(res.data.previous);\n        getPokemon(res.data.results)\n        setLoading(false)\n    }\n\n    // Function to retrieve individual Pokemon data\n    const getPokemon = async (res) => {\n        res.map(async (item) => {\n            const result = await axios.get(item.url)\n            setPokeData(state => {\n                state = [...state, result.data]\n                state.sort((a, b) => a.id > b.id ? 1 : -1)\n                return state;\n            })\n        })\n    }\n\n    // Call pokeFun() on initial render and whenever the url state changes\n    useEffect(() => {\n        pokeFun();\n    }, [url])\n\n\n    // useEffect(() => {\n    //     pokeFun();\n    // }, [url, pokeFun]);\n\n\n    return (\n        <>\n            <div className=\"container\">\n\n                {/* Display Pokemon cards and handle pagination */}\n                <div className=\"left-content\">\n                    <Card pokemon={pokeData} loading={loading} infoPokemon={poke => setPokeDex(poke)} />\n\n                    <div className=\"btn-group\">\n                        {prevUrl && <button onClick={() => {\n                            setPokeData([])\n                            setUrl(prevUrl)\n                        }}>Previous</button>}\n\n                        {nextUrl && <button onClick={() => {\n                            setPokeData([])\n                            setUrl(nextUrl)\n                        }}>Next</button>}\n\n                    </div>\n                </div>\n\n                {/* Display details for selected Pokemon */}\n                <div className=\"right-content\">\n                    <h1>Pokemon Details:</h1>\n                    <Pokeinfo data={pokeDex} />\n                </div>\n            </div>\n        </>\n    )\n}\nexport default Main;"]},"metadata":{},"sourceType":"module"}